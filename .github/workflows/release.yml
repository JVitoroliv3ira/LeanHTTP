
name: Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu

    - name: Extract version from Cargo.toml
      id: extract_version
      run: echo "VERSION=$(grep ^version Cargo.toml | sed -E 's/version = \"(.*)\"/v\1/')" >> $GITHUB_ENV

    - name: Create Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ env.VERSION }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag $VERSION
        git push origin $VERSION

    - name: Build for Linux
      run: cargo build --release

    - name: Upload Linux Binary
      uses: actions/upload-artifact@v3
      with:
        name: linux-binary
        path: target/release/<nome_do_projeto>

  build-windows:
    runs-on: windows-latest
    needs: create-release
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-gnu

    - name: Build for Windows
      run: cargo build --release --target x86_64-pc-windows-gnu

    - name: Upload Windows Binary
      uses: actions/upload-artifact@v3
      with:
        name: windows-binary
        path: target/x86_64-pc-windows-gnu/release/<nome_do_projeto>.exe

  create-github-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-windows]
    steps:
    - name: Download Linux Binary
      uses: actions/download-artifact@v3
      with:
        name: linux-binary

    - name: Download Windows Binary
      uses: actions/download-artifact@v3
      with:
        name: windows-binary

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          linux-binary
          windows-binary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ env.VERSION }}
